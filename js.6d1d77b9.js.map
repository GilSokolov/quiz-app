{"version":3,"sources":["../node_modules/regenerator-runtime/runtime.js","js/ajax.js","js/bs-components.js","js/helpers.js","js/quiz.js","js/index.js"],"names":["ajax","url","xhttp","XMLHttpRequest","send","method","data","Promise","resolve","reject","onreadystatechange","readyState","status","bind","onerror","setRequestHeader","open","get","post","json","JSON","parse","response","bsCard","img","title","text","animation","bsCheckbox","id","label","bsRadioButton","bsJumbotron","description","bsProgressBar","percent","bsAlert","type","bsButton","event","btn","document","createElement","classList","add","innerText","addEventListener","answersContainer","answers","resultContainer","message","progressBar","addClassById","className","getElementById","getRandomNumber","number","Math","floor","random","HTMLparser","html","DOMParser","parseFromString","body","firstChild","_userPoints","_questionIndex","Quiz","questions","userAnswer","Array","isArray","length","correctAnswer","every","answer","includes","result","isCorrect","question","points","questionIndex","correct_answer","map","reduce","sum","userPoints","totalPoints","progress","quizUrl","quiz","resultData","animations","getData","then","getInputs","querySelector","querySelectorAll","addActionButton","replaceWith","restart","e","target","removeEventListener","renderQuestionCard","render","output","element","replaceChild","appendChild","question_type","possible_answers","a_id","caption","join","answerGenerator","card","onClick","showResult","results","forEach","evaluateUserScore","minpoints","maxpoints","userScore","renderResultCard","score","disabled","input","push","value","validatedUserAnswer","checked","highlighteCorrectAnswer","setTimeout","hasNext","next","innerHTML","console","log","catch"],"mappings":"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","file":"js.6d1d77b9.js","sourceRoot":"..\\src","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","function ajax(url) {\r\n\r\n    let xhttp = new XMLHttpRequest();\r\n\r\n    let onSuccess = (resolve) => {\r\n      if (xhttp.readyState == 4 && xhttp.status == 200) {\r\n        return resolve(xhttp);\r\n      }\r\n    };\r\n\r\n    let onError = (reject) => {\r\n        return reject('** An error occurred during the transaction');\r\n    }\r\n\r\n    let send = (method, data) => {\r\n        return new Promise((resolve, reject) => {\r\n            xhttp.onreadystatechange = onSuccess.bind(this, resolve);\r\n            xhttp.onerror = onError.bind(this, reject);\r\n\r\n            if (data) xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n\r\n            xhttp.open(method, url);\r\n            xhttp.send(data);\r\n        });\r\n    }\r\n\r\n    let get = () => {\r\n        return send('GET');\r\n    }\r\n\r\n    let post = (data) =>  {\r\n        return send(\"POST\", data);\r\n    }\r\n\r\n    return { get, post }\r\n}\r\n\r\nlet json = (xhttp) => {\r\n    return JSON.parse(xhttp.response);\r\n}\r\n\r\nexport { ajax, json }\r\n","function bsCard(img, title, text, animation) {\r\n    return `\r\n    <div class=\"card animated ${animation}\">\r\n        <img src=\"${img}\" class=\"card-img-top\" alt=\"${title}\">\r\n        <div class=\"card-body\">\r\n            <h5 class=\"card-title\">${title}</h5>\r\n            <div class=\"card-text\">${text}</div>\r\n        </div>\r\n    </div>`\r\n}\r\n\r\nfunction bsCheckbox(id, label) {\r\n    return `\r\n    <div class=\"custom-control custom-checkbox animated slideInLeft\">\r\n        <input type=\"checkbox\" class=\"custom-control-input\" value=\"${id}\" id=\"${id}\">\r\n        <label class=\"custom-control-label\" for=\"${id}\">${label}</label>\r\n    </div>`\r\n}\r\n\r\nfunction bsRadioButton(id, label) {\r\n    return `\r\n    <div class=\"custom-control custom-radio animated slideInLeft\">\r\n        <input type=\"radio\" class=\"custom-control-input\" name=\"customRadio\" value=\"${id}\" id=\"${id}\">\r\n        <label class=\"custom-control-label\" for=\"${id}\">${label}</label>\r\n    </div>`\r\n}\r\n\r\nfunction bsJumbotron(title, description) {\r\n    return `\r\n    <div class=\"jumbotron jumbotron-fluid\">\r\n        <div class=\"container\">\r\n            <h1 class=\"display-4\">${title}</h1>\r\n            <p class=\"lead\">${description}</p>\r\n        </div>\r\n    </div>`\r\n}\r\n\r\nfunction bsProgressBar(percent) {\r\n    return `\r\n    <div class=\"progress animated jackInTheBox slow\">\r\n        <div class=\"progress-bar\" role=\"progressbar\" style=\"width: ${percent}%;\">${percent}%</div>\r\n    </div>\r\n    `\r\n}\r\n\r\nfunction bsAlert(type, text, animation) {\r\n    return `\r\n    <div class=\"alert alert-${type} animated ${animation}\" role=\"alert\">\r\n        ${text}\r\n    </div>`\r\n}\r\n\r\nfunction bsButton(text, type, event) {\r\n    let btn = document.createElement('button');\r\n    btn.classList.add('btn', 'btn-block', 'mt-3', type);\r\n    btn.innerText = text;\r\n    btn.addEventListener('click',event);\r\n    return btn\r\n}\r\n\r\nexport { bsCard, bsCheckbox, bsRadioButton, bsJumbotron, bsProgressBar, bsAlert, bsButton }\r\n","import { bsProgressBar } from './bs-components';\r\n\r\nexport function answersContainer(answers) {\r\n    return `\r\n    <div style=\"min-height: 60px\" class=\"alert-output\"></div>\r\n    <div class=\"answers\">\r\n        ${answers}\r\n    </div>\r\n    <span class=\"actionBtn\"></span>`;\r\n}\r\n\r\nexport function resultContainer(message, progressBar) {\r\n    return `\r\n    <p>${message}</p>\r\n    <p>your score is:</p>\r\n    ${progressBar}\r\n    <span class=\"actionBtn\"></span>`;\r\n}\r\n\r\nexport function addClassById(id, className) {\r\n    let element = document.getElementById(id);\r\n    element.classList.add(className);\r\n}\r\n /**\r\n * @param {number}\r\n * @returns {number} a number between 0 and the number supplied in the parameter.  \r\n*/ \r\nexport function getRandomNumber(number) {\r\n    return Math.floor(Math.random() * number );\r\n}\r\n\r\nexport function HTMLparser(text) {\r\n    const html = new DOMParser().parseFromString( text , 'text/html');\r\n    return html.body.firstChild; \r\n}\r\n","export default (function(){\r\n    let _userPoints = 0;\r\n    let _questionIndex = 0;\r\n\r\n    class Quiz {\r\n        constructor(questions) {\r\n            this.questions = questions;\r\n        }\r\n\r\n        get questionIndex() {\r\n            return _questionIndex;\r\n        }\r\n\r\n        get userPoints() {\r\n            return _userPoints;\r\n        }\r\n    \r\n        get question() {\r\n            return this.questions[this.questionIndex];\r\n        }\r\n    \r\n        get correctAnswer() {\r\n            return this.question.correct_answer;\r\n        }\r\n    \r\n        get totalPoints() {\r\n            return this.questions.map(question => question.points).reduce((sum, points) => sum + points, 0);\r\n        }\r\n    \r\n        get userScore() {\r\n            return Math.floor(this.userPoints / this.totalPoints * 100);\r\n        }\r\n    \r\n        get progress() {\r\n            return (this.questionIndex + 1) / this.questions.length * 100;\r\n        }\r\n    \r\n        get hasNext() {\r\n            return this.progress !== 100;\r\n        }\r\n    \r\n        /**\r\n         * @param {((number | boolean) | [number])} userAnswer - expects number or boolean or array of numbers.\r\n         * @returns {boolean}\r\n        */\r\n        isCorrect(userAnswer) {  \r\n            if (Array.isArray(userAnswer)) {\r\n                return userAnswer.length === this.correctAnswer.length && userAnswer.every((answer) => this.correctAnswer.includes((answer)));\r\n            }\r\n        \r\n            return this.correctAnswer === userAnswer;\r\n        }\r\n    \r\n        validatedUserAnswer(userAnswer) {\r\n            let result = this.isCorrect(userAnswer);\r\n            if (result) {\r\n                _userPoints += this.question.points;\r\n            }\r\n    \r\n            return result\r\n        }\r\n    \r\n        next() {\r\n            _questionIndex ++;\r\n            return this.question;\r\n        }\r\n\r\n        restart() {\r\n            _questionIndex = 0;\r\n            _userPoints = 0;\r\n            return this.question;\r\n        }\r\n       \r\n    }\r\n    \r\n    return Quiz\r\n\r\n}());\r\n","// parcel module need to run async functions\r\nimport 'regenerator-runtime/runtime';\r\n\r\nimport { ajax, json } from './ajax';\r\nimport { bsAlert, bsButton, bsCard, bsCheckbox, bsJumbotron, bsProgressBar, bsRadioButton } from './bs-components';\r\nimport { addClassById, answersContainer, getRandomNumber, HTMLparser, resultContainer } from './helpers';\r\nimport Quiz from './quiz';\r\n\r\n\r\n(function() {\r\n    let quizUrl = 'https://proto.io/en/jobs/candidate-questions/quiz.json',\r\n        resultUrl = 'https://proto.io/en/jobs/candidate-questions/result.json',\r\n        cardOutput = '.card-output',\r\n        alertOutput = '.alert-output',\r\n        displayeTime = 3000,// after user answer\r\n        animations = ['lightSpeedIn', 'fadeInDownBig', 'bounceInDown', 'flipInY', 'rotateIn', 'slideInUp'],\r\n        quiz,\r\n        resultData;\r\n\r\n    let getData = (url) => {\r\n        return ajax(url).get().then(json);\r\n    }\r\n\r\n    let getInputs = () => {\r\n        return document.querySelector('.answers').querySelectorAll('input:checked');\r\n    }\r\n\r\n    let answerGenerator = (question_type, possible_answers) => {\r\n        if (question_type === 'truefalse') {\r\n            return `${bsRadioButton(true, 'true')} ${bsRadioButton(false, 'false')}`;\r\n        }\r\n    \r\n        if (question_type === 'mutiplechoice-single') {\r\n            return possible_answers.map(answer => bsRadioButton(answer.a_id, answer.caption)).join('');\r\n        }\r\n    \r\n        if( 'mutiplechoice-multiple') {\r\n            return possible_answers.map(answer => bsCheckbox(answer.a_id, answer.caption)).join('');\r\n        }\r\n    }\r\n    /**\r\n    * @returns {string} random animation calss name.  \r\n    */  \r\n    let animation = () => {\r\n        return animations[getRandomNumber(animations.length)];\r\n    }\r\n\r\n    let highlighteCorrectAnswer = () => {\r\n        let { correctAnswer } = quiz;\r\n\r\n        getInputs().forEach(input => input.checked = false);\r\n\r\n        if (Array.isArray(correctAnswer)) {\r\n            return correctAnswer.forEach(id => addClassById(id, 'is-valid'));\r\n        }\r\n\r\n        addClassById(correctAnswer, 'is-valid');\r\n    }\r\n\r\n    let evaluateUserScore = ({ minpoints, maxpoints }) => {\r\n        return quiz.userScore >= minpoints && quiz.userScore <= maxpoints;\r\n    }\r\n\r\n    let addActionButton = (text, type, event) => {\r\n        document.querySelector('.actionBtn').replaceWith( bsButton(text, type, event) );\r\n    }\r\n\r\n    let restart = (e) => {\r\n        e.target.removeEventListener(\"click\", restart);\r\n        renderQuestionCard(quiz.restart());\r\n    }\r\n\r\n    let render = (className, text) => {\r\n        let output = document.querySelector(className);\r\n        let element = HTMLparser(text);\r\n        output.firstChild ? output.replaceChild(element, output.firstChild) : output.appendChild(element);\r\n        return element;\r\n    }\r\n\r\n    let renderQuestionCard = () => {\r\n        let { img, title, question_type, possible_answers } = quiz.question;\r\n\r\n        let answers = answerGenerator(question_type, possible_answers),\r\n            text = answersContainer(answers),\r\n            card = bsCard(img, title, text, animation());\r\n\r\n        render(cardOutput, card);\r\n        addActionButton('Next question', 'btn-primary', onClick);\r\n    }\r\n\r\n    let renderResultCard = (data) => {\r\n        let { img, title, message } = data;\r\n        let score = bsProgressBar(quiz.userScore),\r\n            text = resultContainer(message, score),\r\n            card =  bsCard(img, title, text, animation());\r\n\r\n        render(cardOutput, card);\r\n \r\n        if( quiz.userScore !== 100 ) {\r\n            addActionButton('Try again', 'btn-warning', restart);\r\n        }\r\n    }\r\n\r\n    let showResult = () => {\r\n        resultData.results.forEach(result => {\r\n            if (evaluateUserScore(result)) {\r\n                return renderResultCard(result);\r\n            }\r\n        })\r\n    }\r\n\r\n    let getUserAnswer = () => {\r\n        let answer = [];\r\n        // conver strings to primitives\r\n        getInputs().forEach(input => answer.push(JSON.parse(input.value)));\r\n    \r\n        if (answer.length < 2) return answer[0];\r\n        return answer\r\n    }\r\n\r\n    let onClick = (e) => {\r\n\r\n        e.target.disabled = true;\r\n        e.target.removeEventListener(\"click\", onClick);\r\n\r\n        let userAnswer = getUserAnswer();\r\n\r\n        if (quiz.validatedUserAnswer(userAnswer)) {\r\n            render(alertOutput, bsAlert('success', 'Correct!', 'tada'));\r\n        } else {\r\n            render(alertOutput, bsAlert('danger', 'Wrong!', 'shake'));\r\n            highlighteCorrectAnswer();\r\n        }\r\n    \r\n        setTimeout(() => {\r\n            if (quiz.hasNext) return renderQuestionCard(quiz.next());\r\n\r\n            showResult();\r\n        }, displayeTime);\r\n    }\r\n\r\n    let init = async () => {\r\n        let data = await getData(quizUrl);\r\n        resultData = await getData(resultUrl);\r\n\r\n        document.getElementById('jumbotron-output').innerHTML = bsJumbotron(data.title, data.description);\r\n        quiz = new Quiz(data.questions);\r\n        renderQuestionCard(quiz.question);\r\n        return 'Quiz initialized'\r\n    }\r\n\r\n    init().then(console.log).catch(console.log);\r\n\r\n}());\r\n"]}